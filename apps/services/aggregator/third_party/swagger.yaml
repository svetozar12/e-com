components:
  schemas:
    CreateProductRequest:
      properties:
        available:
          type: boolean
        currency:
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
        image:
          format: binary
          type: string
        inventory:
          $ref: '#/components/schemas/InventoryAvaliability'
        name:
          type: string
        price:
          format: int32
          type: integer
        weight:
          format: int32
          type: integer
      type: object
    Empty:
      properties: {}
      type: object
    GetProductListResponse:
      properties:
        productList:
          items:
            $ref: '#/components/schemas/Product'
          type: array
      type: object
    GoogleProtobufAny:
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that
        describes the type of the serialized message.
      properties:
        '@type':
          description: The type of the serialized message.
          type: string
      type: object
    InventoryAvaliability:
      properties:
        id:
          format: int32
          type: integer
        value:
          format: int32
          type: integer
      type: object
    LoginRequest:
      description: Authentication Service
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    LoginResponse:
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      type: object
    Product:
      properties:
        available:
          type: boolean
        currency:
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
        image:
          format: bytes
          type: string
        inventory:
          $ref: '#/components/schemas/InventoryAvaliability'
        name:
          type: string
        price:
          format: int32
          type: integer
        weight:
          format: int32
          type: integer
      type: object
    RegisterRequest:
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    RegisterResponse:
      properties:
        accessToken:
          type: string
      type: object
    Status:
      description: 'The `Status` type defines a logical error model that is suitable
        for different programming environments, including REST APIs and RPC APIs.
        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details. You can
        find out more about this error model and how to work with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details.  There is
            a common set of message types for APIs to use.
          items:
            $ref: '#/components/schemas/GoogleProtobufAny'
          type: array
        message:
          description: A developer-facing error message, which should be in English.
            Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details]
            field, or localized by the client.
          type: string
      type: object
    UpdateProductRequest:
      properties:
        available:
          type: boolean
        currency:
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
        image:
          format: binary
          type: string
        inventory:
          $ref: '#/components/schemas/InventoryAvaliability'
        name:
          type: string
        price:
          format: int32
          type: integer
        weight:
          format: int32
          type: integer
      type: object
    UpdateUserRequest:
      properties:
        email:
          type: string
        fname:
          type: string
        id:
          format: int32
          type: integer
        lname:
          type: string
      type: object
    User:
      properties:
        email:
          type: string
        fname:
          type: string
        id:
          format: int32
          type: integer
        lname:
          type: string
      type: object
    VerifyTokenRequest:
      properties:
        token:
          type: string
      type: object
    VerifyTokenResponse:
      properties:
        isValid:
          type: boolean
      type: object
  securitySchemes:
    bearerAuth:
      in: header
      name: Authorization
      type: apiKey
info:
  title: Merged API Documentation
  version: '1.0'
openapi: 3.0.0
paths:
  /v1/auth/verify:
    post:
      operationId: AuthenticationService_VerifyToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyTokenResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - AuthenticationService
  /v1/product-catalog:
    get:
      operationId: ProducCatalogService_GetProductList
      parameters:
      - in: query
        name: page
        schema:
          format: int32
          type: integer
      - in: query
        name: limit
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductListResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - ProducCatalogService
    post:
      operationId: ProducCatalogService_CreateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - ProducCatalogService
  /v1/product-catalog/{id}:
    delete:
      operationId: ProducCatalogService_DeleteProduct
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - ProducCatalogService
    get:
      operationId: ProducCatalogService_GetProduct
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - ProducCatalogService
    put:
      operationId: ProducCatalogService_UpdateProduct
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - ProducCatalogService
  /v1/public/auth:
    post:
      operationId: AuthenticationService_Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - AuthenticationService
  /v1/public/user:
    post:
      operationId: UserService_Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - UserService
  /v1/user/{id}:
    delete:
      operationId: UserService_DeleteUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - UserService
    get:
      operationId: UserService_GetUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - UserService
    put:
      operationId: UserService_UpdateUser
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: Default error response
      tags:
      - UserService
security:
- bearerAuth: []
