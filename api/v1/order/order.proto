syntax = "proto3";

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "./order-service";
package order;

service OrderService {
    rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
            option (google.api.http) = {
                        get: "/v1/order/{order_id}",
            };
    };
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
            option (google.api.http) = {
                        post: "/v1/order",
                        body: "*",
            };
    };
    rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse) {
            option (google.api.http) = {
                        put: "/v1/order/{order_id}",
                        body: "*"
            };
    };
}

message Item {
    int32 product_id = 1 [(validate.rules).int32.gte = 1];
    int32 quantity = 2 [(validate.rules).int32.gte = 1];
}

enum OrderStatus {
    PENDING = 0;
    PROCESSING = 1;
    COMPLETED = 2;
    CANCELED = 3;
}

// Get Order

message GetOrderRequest {
    int32 order_id = 1 [(validate.rules).int32.gte = 1];
}

message GetOrderResponse {
    int32 order_id = 1 [(validate.rules).int32.gte = 1];
    int32 userId = 2 [(validate.rules).int32.gte = 1];
    repeated Item items = 3;
    string shipping_address = 4;
    OrderStatus status = 5;
}


// CreateOrder

message CreateOrderRequest {
    repeated Item items = 1 [(validate.rules).repeated.min_items = 1];
    int32 userId = 2 [(validate.rules).int32.gte = 1];
    string shipping_address = 3 [(validate.rules).string.min_len = 1];
    string stripeTOken = 4 [(validate.rules).string.min_len = 1];
}

message CreateOrderResponse {
    int32 order_id = 1;
    string message = 2;
}

// UpdateOrderStatus

message UpdateOrderStatusRequest {
    int32 order_id = 1 [(validate.rules).int32.gte = 1];
    OrderStatus newStatus = 2;
}

message UpdateOrderStatusResponse {
    int32 order_id = 1;
    string message = 2;
}