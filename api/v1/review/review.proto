syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";

option go_package = "./review-service";

// Definition of the Review message
message Review {
  int32 review_id = 1;

  // Product ID should be a positive integer
  int32 product_id = 2 [(validate.rules).int32 = {gt: 0}];

  int32 user_id = 3;

  // Comment should not be empty
  string comment = 4 [(validate.rules).string.min_len = 1];

  // Rating should be between 1 and 5 (inclusive)
  int32 rating = 5 [(validate.rules).int32 = {gte: 1, lte: 5}];

  // Timestamp should be set
  google.protobuf.Timestamp timestamp = 6 [(validate.rules).timestamp.required = true];

  // Add any other relevant fields here, such as review title, likes, etc.
}

// Review service API definition
service ReviewService {
  // Get a review by its ID
  rpc GetReview(GetReviewRequest) returns (Review) {
    option (google.api.http) = {
      get: "/v1/reviews/{review_id}"
    };
  }

  // Get all reviews for a specific product
  rpc GetProductReviews(GetProductReviewsRequest) returns (Review) {
    option (google.api.http) = {
      get: "/v1/products/{product_id}/reviews"
    };
  }

  // Add a new review for a product
  rpc AddReview(AddReviewRequest) returns (Review) {
    option (google.api.http) = {
      post: "/v1/reviews"
      body: "*"
    };
  }
}

// Request message to get a review by its ID
message GetReviewRequest {
  int32 review_id = 1;
}

// Request message to get all reviews for a product
message GetProductReviewsRequest {
  int32 product_id = 1;
}

// Request message to add a new review
message AddReviewRequest {
  int32 product_id = 1;
  int32 user_id = 2;
  string comment = 3;
  int32 rating = 4;
  // Add any other relevant fields here
}

// Response message for successful operations
message ReviewResponse {
  Review review = 1;
}

// Response message for error scenarios
message ErrorResponse {
  string error_message = 1;
}